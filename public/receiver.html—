<!DOCTYPE html>
<html>
<head>
  <title>Receiver with Gemini AI Answer (Clean Layout)</title>
  <style>
    body {
      font-family: Arial, sans-serif;
      background: linear-gradient(135deg, #3b8d99, #6b6b83, #aa4b6b);
      color: white;
      text-align: center;
      margin: 0;
      padding: 0;
    }

    #answer {
      font-size: 28px;
      margin-top: 50px;
      padding: 20px;
      width: 80%;
      margin-left: auto;
      margin-right: auto;
      background-color: rgba(255, 255, 255, 0.15);
      border-radius: 12px;
    }

    #speech {
      font-size: 22px;
      margin-top: 20px;
      padding: 15px;
      width: 80%;
      margin-left: auto;
      margin-right: auto;
      background-color: rgba(255, 255, 255, 0.1);
      border-radius: 10px;
    }

    #status {
      font-size: 26px;
      margin-top: 20px;
    }

    #listen {
      position: fixed;
      bottom: 40px;
      left: 50%;
      transform: translateX(-50%);
      padding: 20px 60px;
      font-size: 30px;
      background-color: #00c9a7;
      border: none;
      color: white;
      border-radius: 12px;
      cursor: pointer;
      transition: background 0.3s;
    }

    #listen:hover {
      background-color: #009f8b;
    }
  </style>
</head>
<body>

<div id="answer"><b>AI Answer will appear here...</b></div>
<div id="speech">Your speech will appear here...</div>
<div id="status">Waiting for space key...</div>

<button id="listen" onclick="startListening()">ðŸŽ¤ Start Listening</button>

<script src="https://cdn.socket.io/4.7.5/socket.io.min.js"></script>
<script>
const socket = io();

// âœ… When space pressed from PC, start listening
socket.on('space_pressed', () => {
    document.getElementById('listen').click();
});

async function startListening() {
    document.getElementById('status').innerText = 'Listening...';
    document.getElementById('speech').innerText = '';
    document.getElementById('answer').innerText = 'AI Answer will appear here...';

    const SpeechRecognition = window.SpeechRecognition || window.webkitSpeechRecognition;
    const recognition = new SpeechRecognition();
    recognition.lang = 'en-US';
    recognition.interimResults = true;
    recognition.continuous = false;

    let finalTranscript = '';

    recognition.onresult = (event) => {
        let interim = '';
        for (let i = event.resultIndex; i < event.results.length; i++) {
            let text = event.results[i][0].transcript;
            if (event.results[i].isFinal) {
                finalTranscript += text + ' ';
            } else {
                interim += text;
            }
        }
        document.getElementById('speech').innerHTML = `<b>You said:</b> ${finalTranscript + interim}`;
    };

    recognition.onend = async () => {
        if (finalTranscript.trim() !== '') {
            document.getElementById('status').innerText = 'Thinkingâ€¦';
            let answer = await getGeminiAnswer(finalTranscript.trim());
            document.getElementById('answer').innerHTML = `<b>AI Answer:</b> ${answer}`;
            document.getElementById('status').innerText = 'Listening againâ€¦';
            setTimeout(() => startListening(), 2500);
        } else {
            document.getElementById('status').innerText = 'No speech detected, restarting...';
            setTimeout(() => startListening(), 2000);
        }
    };

    recognition.start();
}

async function getGeminiAnswer(question) {
    try {
        let response = await fetch("https://generativelanguage.googleapis.com/v1beta/models/gemini-pro:generateContent?key=AIzaSyBZ4X3hDoNVJe-E07iFQSc8zj3eIiZCWYA", {
            method: "POST",
            headers: {"Content-Type": "application/json"},
            body: JSON.stringify({
                "contents": [{"parts": [{"text": question}]}]
            })
        });
        let data = await response.json();
        let answer = data.candidates?.[0]?.content?.parts?.[0]?.text || "No answer received.";
        return answer;
    } catch (e) {
        console.error(e);
        return "Error fetching AI answer.";
    }
}
</script>

</body>
</html>
